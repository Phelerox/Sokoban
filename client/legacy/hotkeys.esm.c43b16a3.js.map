{"version":3,"file":"hotkeys.esm.c43b16a3.js","sources":["../../../../node_modules/hotkeys-js/dist/hotkeys.esm.js"],"sourcesContent":["/*!\n * hotkeys-js v3.6.10\n * A simple micro-library for defining and dispatching keyboard shortcuts. It has no dependencies.\n * \n * Copyright (c) 2019 kenny wong <wowohoo@qq.com>\n * http://jaywcjlove.github.io/hotkeys\n * \n * Licensed under the MIT license.\n */\n\nvar isff = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase().indexOf('firefox') > 0 : false; // 绑定事件\n\nfunction addEvent(object, event, method) {\n  if (object.addEventListener) {\n    object.addEventListener(event, method, false);\n  } else if (object.attachEvent) {\n    object.attachEvent(\"on\".concat(event), function () {\n      method(window.event);\n    });\n  }\n} // 修饰键转换成对应的键码\n\n\nfunction getMods(modifier, key) {\n  var mods = key.slice(0, key.length - 1);\n\n  for (var i = 0; i < mods.length; i++) {\n    mods[i] = modifier[mods[i].toLowerCase()];\n  }\n\n  return mods;\n} // 处理传的key字符串转换成数组\n\n\nfunction getKeys(key) {\n  if (!key) key = '';\n  key = key.replace(/\\s/g, ''); // 匹配任何空白字符,包括空格、制表符、换页符等等\n\n  var keys = key.split(','); // 同时设置多个快捷键，以','分割\n\n  var index = keys.lastIndexOf(''); // 快捷键可能包含','，需特殊处理\n\n  for (; index >= 0;) {\n    keys[index - 1] += ',';\n    keys.splice(index, 1);\n    index = keys.lastIndexOf('');\n  }\n\n  return keys;\n} // 比较修饰键的数组\n\n\nfunction compareArray(a1, a2) {\n  var arr1 = a1.length >= a2.length ? a1 : a2;\n  var arr2 = a1.length >= a2.length ? a2 : a1;\n  var isIndex = true;\n\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr2.indexOf(arr1[i]) === -1) isIndex = false;\n  }\n\n  return isIndex;\n}\n\nvar _keyMap = {\n  // 特殊键\n  backspace: 8,\n  tab: 9,\n  clear: 12,\n  enter: 13,\n  \"return\": 13,\n  esc: 27,\n  escape: 27,\n  space: 32,\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n  del: 46,\n  \"delete\": 46,\n  ins: 45,\n  insert: 45,\n  home: 36,\n  end: 35,\n  pageup: 33,\n  pagedown: 34,\n  capslock: 20,\n  '⇪': 20,\n  ',': 188,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '-': isff ? 173 : 189,\n  '=': isff ? 61 : 187,\n  ';': isff ? 59 : 186,\n  '\\'': 222,\n  '[': 219,\n  ']': 221,\n  '\\\\': 220\n};\nvar _modifier = {\n  // 修饰键\n  '⇧': 16,\n  shift: 16,\n  '⌥': 18,\n  alt: 18,\n  option: 18,\n  '⌃': 17,\n  ctrl: 17,\n  control: 17,\n  '⌘': isff ? 224 : 91,\n  cmd: isff ? 224 : 91,\n  command: isff ? 224 : 91\n};\nvar modifierMap = {\n  16: 'shiftKey',\n  18: 'altKey',\n  17: 'ctrlKey'\n};\nvar _mods = {\n  16: false,\n  18: false,\n  17: false\n};\nvar _handlers = {}; // F1~F12 特殊键\n\nfor (var k = 1; k < 20; k++) {\n  _keyMap[\"f\".concat(k)] = 111 + k;\n} // 兼容Firefox处理\n\n\nmodifierMap[isff ? 224 : 91] = 'metaKey';\n_mods[isff ? 224 : 91] = false;\n\nvar _downKeys = []; // 记录摁下的绑定键\n\nvar _scope = 'all'; // 默认热键范围\n\nvar elementHasBindEvent = []; // 已绑定事件的节点记录\n// 返回键码\n\nvar code = function code(x) {\n  return _keyMap[x.toLowerCase()] || _modifier[x.toLowerCase()] || x.toUpperCase().charCodeAt(0);\n}; // 设置获取当前范围（默认为'所有'）\n\n\nfunction setScope(scope) {\n  _scope = scope || 'all';\n} // 获取当前范围\n\n\nfunction getScope() {\n  return _scope || 'all';\n} // 获取摁下绑定键的键值\n\n\nfunction getPressedKeyCodes() {\n  return _downKeys.slice(0);\n} // 表单控件控件判断 返回 Boolean\n// hotkey is effective only when filter return true\n\n\nfunction filter(event) {\n  var target = event.target || event.srcElement;\n  var tagName = target.tagName;\n  var flag = true; // ignore: isContentEditable === 'true', <input> and <textarea> when readOnly state is false, <select>\n\n  if (target.isContentEditable || tagName === 'TEXTAREA' || (tagName === 'INPUT' || tagName === 'TEXTAREA') && !target.readOnly) {\n    flag = false;\n  }\n\n  return flag;\n} // 判断摁下的键是否为某个键，返回true或者false\n\n\nfunction isPressed(keyCode) {\n  if (typeof keyCode === 'string') {\n    keyCode = code(keyCode); // 转换成键码\n  }\n\n  return _downKeys.indexOf(keyCode) !== -1;\n} // 循环删除handlers中的所有 scope(范围)\n\n\nfunction deleteScope(scope, newScope) {\n  var handlers;\n  var i; // 没有指定scope，获取scope\n\n  if (!scope) scope = getScope();\n\n  for (var key in _handlers) {\n    if (Object.prototype.hasOwnProperty.call(_handlers, key)) {\n      handlers = _handlers[key];\n\n      for (i = 0; i < handlers.length;) {\n        if (handlers[i].scope === scope) handlers.splice(i, 1);else i++;\n      }\n    }\n  } // 如果scope被删除，将scope重置为all\n\n\n  if (getScope() === scope) setScope(newScope || 'all');\n} // 清除修饰键\n\n\nfunction clearModifier(event) {\n  var key = event.keyCode || event.which || event.charCode;\n\n  var i = _downKeys.indexOf(key); // 从列表中清除按压过的键\n\n\n  if (i >= 0) {\n    _downKeys.splice(i, 1);\n  } // 特殊处理 cmmand 键，在 cmmand 组合快捷键 keyup 只执行一次的问题\n\n\n  if (event.key && event.key.toLowerCase() === 'meta') {\n    _downKeys.splice(0, _downKeys.length);\n  } // 修饰键 shiftKey altKey ctrlKey (command||metaKey) 清除\n\n\n  if (key === 93 || key === 224) key = 91;\n\n  if (key in _mods) {\n    _mods[key] = false; // 将修饰键重置为false\n\n    for (var k in _modifier) {\n      if (_modifier[k] === key) hotkeys[k] = false;\n    }\n  }\n} // 解除绑定某个范围的快捷键\n\n\nfunction unbind(key, scope, method) {\n  var multipleKeys = getKeys(key);\n  var keys;\n  var mods = [];\n  var obj; // 通过函数判断，是否解除绑定\n  // https://github.com/jaywcjlove/hotkeys/issues/44\n\n  if (typeof scope === 'function') {\n    method = scope;\n    scope = 'all';\n  }\n\n  for (var i = 0; i < multipleKeys.length; i++) {\n    // 将组合快捷键拆分为数组\n    keys = multipleKeys[i].split('+'); // 记录每个组合键中的修饰键的键码 返回数组\n\n    if (keys.length > 1) {\n      mods = getMods(_modifier, keys);\n    } else {\n      mods = [];\n    } // 获取除修饰键外的键值key\n\n\n    key = keys[keys.length - 1];\n    key = key === '*' ? '*' : code(key); // 判断是否传入范围，没有就获取范围\n\n    if (!scope) scope = getScope(); // 如何key不在 _handlers 中返回不做处理\n\n    if (!_handlers[key]) return; // 清空 handlers 中数据，\n    // 让触发快捷键键之后没有事件执行到达解除快捷键绑定的目的\n\n    for (var r = 0; r < _handlers[key].length; r++) {\n      obj = _handlers[key][r]; // 通过函数判断，是否解除绑定，函数相等直接返回\n\n      var isMatchingMethod = method ? obj.method === method : true; // 判断是否在范围内并且键值相同\n\n      if (isMatchingMethod && obj.scope === scope && compareArray(obj.mods, mods)) {\n        _handlers[key][r] = {};\n      }\n    }\n  }\n} // 对监听对应快捷键的回调函数进行处理\n\n\nfunction eventHandler(event, handler, scope) {\n  var modifiersMatch; // 看它是否在当前范围\n\n  if (handler.scope === scope || handler.scope === 'all') {\n    // 检查是否匹配修饰符（如果有返回true）\n    modifiersMatch = handler.mods.length > 0;\n\n    for (var y in _mods) {\n      if (Object.prototype.hasOwnProperty.call(_mods, y)) {\n        if (!_mods[y] && handler.mods.indexOf(+y) > -1 || _mods[y] && handler.mods.indexOf(+y) === -1) modifiersMatch = false;\n      }\n    } // 调用处理程序，如果是修饰键不做处理\n\n\n    if (handler.mods.length === 0 && !_mods[16] && !_mods[18] && !_mods[17] && !_mods[91] || modifiersMatch || handler.shortcut === '*') {\n      if (handler.method(event, handler) === false) {\n        if (event.preventDefault) event.preventDefault();else event.returnValue = false;\n        if (event.stopPropagation) event.stopPropagation();\n        if (event.cancelBubble) event.cancelBubble = true;\n      }\n    }\n  }\n} // 处理keydown事件\n\n\nfunction dispatch(event) {\n  var asterisk = _handlers['*'];\n  var key = event.keyCode || event.which || event.charCode; // 表单控件过滤 默认表单控件不触发快捷键\n\n  if (!hotkeys.filter.call(this, event)) return; // Collect bound keys\n  // If an Input Method Editor is processing key input and the event is keydown, return 229.\n  // https://stackoverflow.com/questions/25043934/is-it-ok-to-ignore-keydown-events-with-keycode-229\n  // http://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n\n  if (_downKeys.indexOf(key) === -1 && key !== 229) _downKeys.push(key); // Gecko(Firefox)的command键值224，在Webkit(Chrome)中保持一致\n  // Webkit左右command键值不一样\n\n  if (key === 93 || key === 224) key = 91;\n\n  if (key in _mods) {\n    _mods[key] = true; // 将特殊字符的key注册到 hotkeys 上\n\n    for (var k in _modifier) {\n      if (_modifier[k] === key) hotkeys[k] = true;\n    }\n\n    if (!asterisk) return;\n  } // 将modifierMap里面的修饰键绑定到event中\n\n\n  for (var e in _mods) {\n    if (Object.prototype.hasOwnProperty.call(_mods, e)) {\n      _mods[e] = event[modifierMap[e]];\n    }\n  } // 获取范围 默认为all\n\n\n  var scope = getScope(); // 对任何快捷键都需要做的处理\n\n  if (asterisk) {\n    for (var i = 0; i < asterisk.length; i++) {\n      if (asterisk[i].scope === scope && (event.type === 'keydown' && asterisk[i].keydown || event.type === 'keyup' && asterisk[i].keyup)) {\n        eventHandler(event, asterisk[i], scope);\n      }\n    }\n  } // key 不在_handlers中返回\n\n\n  if (!(key in _handlers)) return;\n\n  for (var _i = 0; _i < _handlers[key].length; _i++) {\n    if (event.type === 'keydown' && _handlers[key][_i].keydown || event.type === 'keyup' && _handlers[key][_i].keyup) {\n      if (_handlers[key][_i].key) {\n        var keyShortcut = _handlers[key][_i].key.split('+');\n\n        var _downKeysCurrent = []; // 记录当前按键键值\n\n        for (var a = 0; a < keyShortcut.length; a++) {\n          _downKeysCurrent.push(code(keyShortcut[a]));\n        }\n\n        _downKeysCurrent = _downKeysCurrent.sort();\n\n        if (_downKeysCurrent.join('') === _downKeys.sort().join('')) {\n          // 找到处理内容\n          eventHandler(event, _handlers[key][_i], scope);\n        }\n      }\n    }\n  }\n} // 判断 element 是否已经绑定事件\n\n\nfunction isElementBind(element) {\n  return elementHasBindEvent.indexOf(element) > -1;\n}\n\nfunction hotkeys(key, option, method) {\n  var keys = getKeys(key); // 需要处理的快捷键列表\n\n  var mods = [];\n  var scope = 'all'; // scope默认为all，所有范围都有效\n\n  var element = document; // 快捷键事件绑定节点\n\n  var i = 0;\n  var keyup = false;\n  var keydown = true; // 对为设定范围的判断\n\n  if (method === undefined && typeof option === 'function') {\n    method = option;\n  }\n\n  if (Object.prototype.toString.call(option) === '[object Object]') {\n    if (option.scope) scope = option.scope; // eslint-disable-line\n\n    if (option.element) element = option.element; // eslint-disable-line\n\n    if (option.keyup) keyup = option.keyup; // eslint-disable-line\n\n    if (option.keydown) keydown = option.keydown; // eslint-disable-line\n  }\n\n  if (typeof option === 'string') scope = option; // 对于每个快捷键进行处理\n\n  for (; i < keys.length; i++) {\n    key = keys[i].split('+'); // 按键列表\n\n    mods = []; // 如果是组合快捷键取得组合快捷键\n\n    if (key.length > 1) mods = getMods(_modifier, key); // 将非修饰键转化为键码\n\n    key = key[key.length - 1];\n    key = key === '*' ? '*' : code(key); // *表示匹配所有快捷键\n    // 判断key是否在_handlers中，不在就赋一个空数组\n\n    if (!(key in _handlers)) _handlers[key] = [];\n\n    _handlers[key].push({\n      keyup: keyup,\n      keydown: keydown,\n      scope: scope,\n      mods: mods,\n      shortcut: keys[i],\n      method: method,\n      key: keys[i]\n    });\n  } // 在全局document上设置快捷键\n\n\n  if (typeof element !== 'undefined' && !isElementBind(element) && window) {\n    elementHasBindEvent.push(element);\n    addEvent(element, 'keydown', function (e) {\n      dispatch(e);\n    });\n    addEvent(window, 'focus', function () {\n      _downKeys = [];\n    });\n    addEvent(element, 'keyup', function (e) {\n      dispatch(e);\n      clearModifier(e);\n    });\n  }\n}\n\nvar _api = {\n  setScope: setScope,\n  getScope: getScope,\n  deleteScope: deleteScope,\n  getPressedKeyCodes: getPressedKeyCodes,\n  isPressed: isPressed,\n  filter: filter,\n  unbind: unbind\n};\n\nfor (var a in _api) {\n  if (Object.prototype.hasOwnProperty.call(_api, a)) {\n    hotkeys[a] = _api[a];\n  }\n}\n\nif (typeof window !== 'undefined') {\n  var _hotkeys = window.hotkeys;\n\n  hotkeys.noConflict = function (deep) {\n    if (deep && window.hotkeys === hotkeys) {\n      window.hotkeys = _hotkeys;\n    }\n\n    return hotkeys;\n  };\n\n  window.hotkeys = hotkeys;\n}\n\nexport default hotkeys;\n"],"names":["isff","navigator","userAgent","toLowerCase","indexOf","addEvent","object","event","method","addEventListener","attachEvent","concat","window","getMods","modifier","key","mods","slice","length","i","getKeys","keys","replace","split","index","lastIndexOf","splice","compareArray","a1","a2","arr1","arr2","isIndex","_keyMap","backspace","tab","clear","enter","esc","escape","space","left","up","right","down","del","ins","insert","home","end","pageup","pagedown","capslock","_modifier","shift","alt","option","ctrl","control","cmd","command","modifierMap","_mods","_handlers","k","_downKeys","_scope","elementHasBindEvent","code","x","toUpperCase","charCodeAt","setScope","scope","getScope","eventHandler","handler","modifiersMatch","y","Object","prototype","hasOwnProperty","call","shortcut","preventDefault","returnValue","stopPropagation","cancelBubble","dispatch","asterisk","keyCode","which","charCode","hotkeys","filter","this","push","e","type","keydown","keyup","_i","keyShortcut","_downKeysCurrent","a","sort","join","element","document","undefined","toString","isElementBind","clearModifier","_api","deleteScope","newScope","handlers","getPressedKeyCodes","isPressed","target","srcElement","tagName","flag","isContentEditable","readOnly","unbind","obj","multipleKeys","r","_hotkeys","noConflict","deep"],"mappings":"AAUA,IAAIA,EAA4B,oBAAdC,WAA4BA,UAAUC,UAAUC,cAAcC,QAAQ,WAAa,EAErG,SAASC,EAASC,EAAQC,EAAOC,GAC3BF,EAAOG,iBACTH,EAAOG,iBAAiBF,EAAOC,GAAQ,GAC9BF,EAAOI,aAChBJ,EAAOI,YAAY,KAAKC,OAAOJ,GAAQ,WACrCC,EAAOI,OAAOL,SAMpB,SAASM,EAAQC,EAAUC,WACrBC,EAAOD,EAAIE,MAAM,EAAGF,EAAIG,OAAS,GAE5BC,EAAI,EAAGA,EAAIH,EAAKE,OAAQC,IAC/BH,EAAKG,GAAKL,EAASE,EAAKG,GAAGhB,sBAGtBa,EAIT,SAASI,EAAQL,GACVA,IAAKA,EAAM,YAGZM,GAFJN,EAAMA,EAAIO,QAAQ,MAAO,KAEVC,MAAM,KAEjBC,EAAQH,EAAKI,YAAY,IAEtBD,GAAS,GACdH,EAAKG,EAAQ,IAAM,IACnBH,EAAKK,OAAOF,EAAO,GACnBA,EAAQH,EAAKI,YAAY,WAGpBJ,EAIT,SAASM,EAAaC,EAAIC,WACpBC,EAAOF,EAAGV,QAAUW,EAAGX,OAASU,EAAKC,EACrCE,EAAOH,EAAGV,QAAUW,EAAGX,OAASW,EAAKD,EACrCI,GAAU,EAELb,EAAI,EAAGA,EAAIW,EAAKZ,OAAQC,KACA,IAA3BY,EAAK3B,QAAQ0B,EAAKX,MAAYa,GAAU,UAGvCA,EAiET,IA9DA,IAAIC,EAAU,CAEZC,UAAW,EACXC,IAAK,EACLC,MAAO,GACPC,MAAO,UACG,GACVC,IAAK,GACLC,OAAQ,GACRC,MAAO,GACPC,KAAM,GACNC,GAAI,GACJC,MAAO,GACPC,KAAM,GACNC,IAAK,UACK,GACVC,IAAK,GACLC,OAAQ,GACRC,KAAM,GACNC,IAAK,GACLC,OAAQ,GACRC,SAAU,GACVC,SAAU,OACL,OACA,QACA,QACA,QACA,QACApD,EAAO,IAAM,QACbA,EAAO,GAAK,QACZA,EAAO,GAAK,QACX,QACD,QACA,SACC,KAEJqD,EAAY,KAET,GACLC,MAAO,OACF,GACLC,IAAK,GACLC,OAAQ,OACH,GACLC,KAAM,GACNC,QAAS,OACJ1D,EAAO,IAAM,GAClB2D,IAAK3D,EAAO,IAAM,GAClB4D,QAAS5D,EAAO,IAAM,IAEpB6D,EAAc,IACZ,cACA,YACA,WAEFC,EAAQ,KACN,MACA,MACA,GAEFC,EAAY,GAEPC,EAAI,EAAGA,EAAI,GAAIA,IACtB/B,EAAQ,IAAItB,OAAOqD,IAAM,IAAMA,EAIjCH,EAAY7D,EAAO,IAAM,IAAM,UAC/B8D,EAAM9D,EAAO,IAAM,KAAM,EAEzB,IAAIiE,EAAY,GAEZC,EAAS,MAETC,EAAsB,GAGtBC,EAAO,SAAcC,UAChBpC,EAAQoC,EAAElE,gBAAkBkD,EAAUgB,EAAElE,gBAAkBkE,EAAEC,cAAcC,WAAW,IAI9F,SAASC,EAASC,GAChBP,EAASO,GAAS,MAIpB,SAASC,WACAR,GAAU,MA6HnB,SAASS,EAAapE,EAAOqE,EAASH,OAChCI,KAEAD,EAAQH,QAAUA,GAA2B,QAAlBG,EAAQH,MAAiB,KAIjD,IAAIK,KAFTD,EAAiBD,EAAQ5D,KAAKE,OAAS,EAEzB4C,EACRiB,OAAOC,UAAUC,eAAeC,KAAKpB,EAAOgB,MACzChB,EAAMgB,IAAMF,EAAQ5D,KAAKZ,SAAS0E,IAAM,GAAKhB,EAAMgB,KAAoC,IAA9BF,EAAQ5D,KAAKZ,SAAS0E,MAAWD,GAAiB,IAKxF,IAAxBD,EAAQ5D,KAAKE,QAAiB4C,EAAM,KAAQA,EAAM,KAAQA,EAAM,KAAQA,EAAM,OAAOe,GAAuC,MAArBD,EAAQO,WAC1E,IAAnCP,EAAQpE,OAAOD,EAAOqE,KACpBrE,EAAM6E,eAAgB7E,EAAM6E,iBAAsB7E,EAAM8E,aAAc,EACtE9E,EAAM+E,iBAAiB/E,EAAM+E,kBAC7B/E,EAAMgF,eAAchF,EAAMgF,cAAe,KAOrD,SAASC,EAASjF,OACZkF,EAAW1B,EAAU,KACrBhD,EAAMR,EAAMmF,SAAWnF,EAAMoF,OAASpF,EAAMqF,YAE3CC,EAAQC,OAAOZ,KAAKa,KAAMxF,QAKC,IAA5B0D,EAAU7D,QAAQW,IAAuB,MAARA,GAAakD,EAAU+B,KAAKjF,GAGrD,KAARA,GAAsB,MAARA,IAAaA,EAAM,IAEjCA,KAAO+C,EAAO,KAGX,IAAIE,KAFTF,EAAM/C,IAAO,EAECsC,EACRA,EAAUW,KAAOjD,IAAK8E,EAAQ7B,IAAK,OAGpCyB,EAAU,WAIZ,IAAIQ,KAAKnC,EACRiB,OAAOC,UAAUC,eAAeC,KAAKpB,EAAOmC,KAC9CnC,EAAMmC,GAAK1F,EAAMsD,EAAYoC,SAK7BxB,EAAQC,OAERe,MACG,IAAItE,EAAI,EAAGA,EAAIsE,EAASvE,OAAQC,IAC/BsE,EAAStE,GAAGsD,QAAUA,IAAyB,YAAflE,EAAM2F,MAAsBT,EAAStE,GAAGgF,SAA0B,UAAf5F,EAAM2F,MAAoBT,EAAStE,GAAGiF,QAC3HzB,EAAapE,EAAOkF,EAAStE,GAAIsD,MAMjC1D,KAAOgD,MAER,IAAIsC,EAAK,EAAGA,EAAKtC,EAAUhD,GAAKG,OAAQmF,QACxB,YAAf9F,EAAM2F,MAAsBnC,EAAUhD,GAAKsF,GAAIF,SAA0B,UAAf5F,EAAM2F,MAAoBnC,EAAUhD,GAAKsF,GAAID,QACrGrC,EAAUhD,GAAKsF,GAAItF,IAAK,SACtBuF,EAAcvC,EAAUhD,GAAKsF,GAAItF,IAAIQ,MAAM,KAE3CgF,EAAmB,GAEdC,EAAI,EAAGA,EAAIF,EAAYpF,OAAQsF,IACtCD,EAAiBP,KAAK5B,EAAKkC,EAAYE,MAGzCD,EAAmBA,EAAiBE,QAEfC,KAAK,MAAQzC,EAAUwC,OAAOC,KAAK,KAEtD/B,EAAapE,EAAOwD,EAAUhD,GAAKsF,GAAK5B,KAYlD,SAASoB,EAAQ9E,EAAKyC,EAAQhD,OACxBa,EAAOD,EAAQL,GAEfC,EAAO,GACPyD,EAAQ,MAERkC,EAAUC,SAEVzF,EAAI,EACJiF,GAAQ,EACRD,GAAU,WAECU,IAAXrG,GAA0C,mBAAXgD,IACjChD,EAASgD,GAGoC,oBAA3CuB,OAAOC,UAAU8B,SAAS5B,KAAK1B,KAC7BA,EAAOiB,QAAOA,EAAQjB,EAAOiB,OAE7BjB,EAAOmD,UAASA,EAAUnD,EAAOmD,SAEjCnD,EAAO4C,QAAOA,EAAQ5C,EAAO4C,OAE7B5C,EAAO2C,UAASA,EAAU3C,EAAO2C,UAGjB,iBAAX3C,IAAqBiB,EAAQjB,GAEjCrC,EAAIE,EAAKH,OAAQC,IAGtBH,EAAO,IAFPD,EAAMM,EAAKF,GAAGI,MAAM,MAIZL,OAAS,IAAGF,EAAOH,EAAQwC,EAAWtC,KAG9CA,EAAc,OADdA,EAAMA,EAAIA,EAAIG,OAAS,IACH,IAAMkD,EAAKrD,MAGlBgD,IAAYA,EAAUhD,GAAO,IAE1CgD,EAAUhD,GAAKiF,KAAK,CAClBI,MAAOA,EACPD,QAASA,EACT1B,MAAOA,EACPzD,KAAMA,EACNmE,SAAU9D,EAAKF,GACfX,OAAQA,EACRO,IAAKM,EAAKF,UAKS,IAAZwF,IAzDb,SAAuBA,UACdxC,EAAoB/D,QAAQuG,IAAY,EAwDRI,CAAcJ,IAAY/F,SAC/DuD,EAAoB6B,KAAKW,GACzBtG,EAASsG,EAAS,UAAW,SAAUV,GACrCT,EAASS,KAEX5F,EAASO,OAAQ,QAAS,WACxBqD,EAAY,KAEd5D,EAASsG,EAAS,QAAS,SAAUV,GACnCT,EAASS,GAvOf,SAAuB1F,OACjBQ,EAAMR,EAAMmF,SAAWnF,EAAMoF,OAASpF,EAAMqF,SAE5CzE,EAAI8C,EAAU7D,QAAQW,MAGtBI,GAAK,GACP8C,EAAUvC,OAAOP,EAAG,GAIlBZ,EAAMQ,KAAmC,SAA5BR,EAAMQ,IAAIZ,eACzB8D,EAAUvC,OAAO,EAAGuC,EAAU/C,QAIpB,KAARH,GAAsB,MAARA,IAAaA,EAAM,IAEjCA,KAAO+C,MAGJ,IAAIE,KAFTF,EAAM/C,IAAO,EAECsC,EACRA,EAAUW,KAAOjD,IAAK8E,EAAQ7B,IAAK,GAkNvCgD,CAAcf,MAKpB,IAAIgB,EAAO,CACTzC,SAAUA,EACVE,SAAUA,EACVwC,YArQF,SAAqBzC,EAAO0C,OACtBC,EACAjG,MAIC,IAAIJ,KAFJ0D,IAAOA,EAAQC,KAEJX,KACVgB,OAAOC,UAAUC,eAAeC,KAAKnB,EAAWhD,OAClDqG,EAAWrD,EAAUhD,GAEhBI,EAAI,EAAGA,EAAIiG,EAASlG,QACnBkG,EAASjG,GAAGsD,QAAUA,EAAO2C,EAAS1F,OAAOP,EAAG,GAAQA,IAM9DuD,MAAeD,GAAOD,EAAS2C,GAAY,QAqP/CE,mBAlSF,kBACSpD,EAAUhD,MAAM,IAkSvBqG,UAhRF,SAAmB5B,SACM,iBAAZA,IACTA,EAAUtB,EAAKsB,KAGsB,IAAhCzB,EAAU7D,QAAQsF,IA4QzBI,OA9RF,SAAgBvF,OACVgH,EAAShH,EAAMgH,QAAUhH,EAAMiH,WAC/BC,EAAUF,EAAOE,QACjBC,GAAO,SAEPH,EAAOI,mBAAiC,aAAZF,IAAuC,UAAZA,GAAmC,aAAZA,GAA4BF,EAAOK,YACnHF,GAAO,GAGFA,GAsRPG,OAxNF,SAAgB9G,EAAK0D,EAAOjE,OAEtBa,EAEAyG,EAHAC,EAAe3G,EAAQL,GAEvBC,EAAO,GAIU,mBAAVyD,IACTjE,EAASiE,EACTA,EAAQ,WAGL,IAAItD,EAAI,EAAGA,EAAI4G,EAAa7G,OAAQC,IAAK,IAK1CH,GAHFK,EAAO0G,EAAa5G,GAAGI,MAAM,MAEpBL,OAAS,EACTL,EAAQwC,EAAWhC,GAEnB,GAKTN,EAAc,OADdA,EAAMM,EAAKA,EAAKH,OAAS,IACL,IAAMkD,EAAKrD,GAE1B0D,IAAOA,EAAQC,MAEfX,EAAUhD,GAAM,WAGhB,IAAIiH,EAAI,EAAGA,EAAIjE,EAAUhD,GAAKG,OAAQ8G,IACzCF,EAAM/D,EAAUhD,GAAKiH,KAEExH,GAASsH,EAAItH,SAAWA,IAEvBsH,EAAIrD,QAAUA,GAAS9C,EAAamG,EAAI9G,KAAMA,KACpE+C,EAAUhD,GAAKiH,GAAK,OAsL5B,IAAK,IAAIxB,KAAKS,EACRlC,OAAOC,UAAUC,eAAeC,KAAK+B,EAAMT,KAC7CX,EAAQW,GAAKS,EAAKT,IAItB,GAAsB,oBAAX5F,OAAwB,KAC7BqH,EAAWrH,OAAOiF,QAEtBA,EAAQqC,WAAa,SAAUC,UACzBA,GAAQvH,OAAOiF,UAAYA,IAC7BjF,OAAOiF,QAAUoC,GAGZpC,GAGTjF,OAAOiF,QAAUA"}